{"ast":null,"code":"class NetLine {\n  get(route) {\n    return executer(route);\n  }\n  post(route, body) {\n    return executer(route, body, \"POST\");\n  }\n  delete(route) {\n    return executer(route, null, \"DELETE\");\n  }\n  patch(route, body) {\n    return executer(route, body, \"PATCH\");\n  }\n}\nasync function executer(route, body, method) {\n  let requestType = \"GET\";\n  if (body) requestType = \"POST\";\n  if (method) requestType = method;\n  let headerParam = {\n    // withCredentials: true,\n    \"Content-type\": \"application/json\"\n  };\n  let requestObject = {\n    method: requestType,\n    headers: headerParam,\n    withCredntials: true\n    // credentials: \"include\",\n  };\n\n  if (body) requestObject.body = JSON.stringify(body);\n  let base = \"http://127.0.0.1:8000\";\n  if (process.env.REACT_APP_SERVER) base = process.env.REACT_APP_SERVER;\n  route = base + \"/api/\" + route;\n  let res = await fetch(route, requestObject);\n  let jsonData = await res.json();\n  return jsonData.data;\n}\nconst netLine = new NetLine();\nexport default netLine;","map":{"version":3,"names":["NetLine","get","route","executer","post","body","delete","patch","method","requestType","headerParam","requestObject","headers","withCredntials","JSON","stringify","base","process","env","REACT_APP_SERVER","res","fetch","jsonData","json","data","netLine"],"sources":["C:/Users/Wasif/Music/mcq-laravel-zip/frontend/src/controllers/netLine.js"],"sourcesContent":["class NetLine {\n  get(route) {\n    return executer(route);\n  }\n\n  post(route, body) {\n    return executer(route, body, \"POST\");\n  }\n\n  delete(route) {\n    return executer(route, null, \"DELETE\");\n  }\n\n  patch(route, body) {\n    return executer(route, body, \"PATCH\");\n  }\n}\n\nasync function executer(route, body, method) {\n  let requestType = \"GET\";\n  if (body) requestType = \"POST\";\n  if (method) requestType = method;\n\n  let headerParam = {\n    // withCredentials: true,\n    \"Content-type\": \"application/json\",\n  };\n\n  let requestObject = {\n    method: requestType,\n    headers: headerParam,\n    withCredntials: true,\n    // credentials: \"include\",\n  };\n\n  if (body) requestObject.body = JSON.stringify(body);\n\n  let base = \"http://127.0.0.1:8000\";\n  if (process.env.REACT_APP_SERVER) base = process.env.REACT_APP_SERVER;\n\n  route = base + \"/api/\" + route;\n\n  let res = await fetch(route, requestObject);\n\n  let jsonData = await res.json();\n\n  return jsonData.data;\n}\n\nconst netLine = new NetLine();\n\nexport default netLine;\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,GAAGA,CAACC,KAAK,EAAE;IACT,OAAOC,QAAQ,CAACD,KAAK,CAAC;EACxB;EAEAE,IAAIA,CAACF,KAAK,EAAEG,IAAI,EAAE;IAChB,OAAOF,QAAQ,CAACD,KAAK,EAAEG,IAAI,EAAE,MAAM,CAAC;EACtC;EAEAC,MAAMA,CAACJ,KAAK,EAAE;IACZ,OAAOC,QAAQ,CAACD,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;EACxC;EAEAK,KAAKA,CAACL,KAAK,EAAEG,IAAI,EAAE;IACjB,OAAOF,QAAQ,CAACD,KAAK,EAAEG,IAAI,EAAE,OAAO,CAAC;EACvC;AACF;AAEA,eAAeF,QAAQA,CAACD,KAAK,EAAEG,IAAI,EAAEG,MAAM,EAAE;EAC3C,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIJ,IAAI,EAAEI,WAAW,GAAG,MAAM;EAC9B,IAAID,MAAM,EAAEC,WAAW,GAAGD,MAAM;EAEhC,IAAIE,WAAW,GAAG;IAChB;IACA,cAAc,EAAE;EAClB,CAAC;EAED,IAAIC,aAAa,GAAG;IAClBH,MAAM,EAAEC,WAAW;IACnBG,OAAO,EAAEF,WAAW;IACpBG,cAAc,EAAE;IAChB;EACF,CAAC;;EAED,IAAIR,IAAI,EAAEM,aAAa,CAACN,IAAI,GAAGS,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;EAEnD,IAAIW,IAAI,GAAG,uBAAuB;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAEH,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EAErEjB,KAAK,GAAGc,IAAI,GAAG,OAAO,GAAGd,KAAK;EAE9B,IAAIkB,GAAG,GAAG,MAAMC,KAAK,CAACnB,KAAK,EAAES,aAAa,CAAC;EAE3C,IAAIW,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAE/B,OAAOD,QAAQ,CAACE,IAAI;AACtB;AAEA,MAAMC,OAAO,GAAG,IAAIzB,OAAO,CAAC,CAAC;AAE7B,eAAeyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}